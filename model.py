# -*- coding: utf-8 -*-
"""Housing_Price_Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/anushirahatti/housing-price-prediction-app/blob/master/notebook/Housing_Price_Prediction.ipynb

# Ingest
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split, cross_val_score,GridSearchCV
from sklearn.metrics import mean_squared_error, make_scorer, r2_score, confusion_matrix, accuracy_score
import statsmodels.formula.api as sm
import statsmodels.api as sm
import matplotlib.pyplot as plt
import sklearn.ensemble as ske
from google.colab import files

# Code to read csv file into colaboratory:
!pip install -U -q PyDrive
from pydrive.auth import GoogleAuth
from pydrive.drive import GoogleDrive
from google.colab import auth
from oauth2client.client import GoogleCredentials

#Autheticate E-Mail ID

auth.authenticate_user()
gauth = GoogleAuth()
gauth.credentials = GoogleCredentials.get_application_default()
drive = GoogleDrive(gauth)

from google.colab import drive
drive.mount('/content/drive')

"""# EDA"""

#Get File from Drive using file-ID

#2.1 Get the Zillow file
downloaded = drive.CreateFile({'id':'1VkaBwlaXR90PWZtNiJtr4Eg3RVwpnlwi'}) # replace the id with id of file you want to access
downloaded.GetContentFile('Zillow.csv') 
#2.2 Get the minum wage file
download = drive.CreateFile({'id':'1Wy1U-aWNw0xP26Kg2YwvIG5UiOWnMHa6'}) # replace the id with id of file you want to access
download.GetContentFile('Minimum Wage Data.csv')

# Read House Price dataset

df1 = pd.read_csv('/content/drive/MyDrive/Final.csv')
df1.head()

# Importing the libraries
import numpy as np
# import matplotlib.pyplot as plt
import pandas as pd
import pickle

dataset = pd.read_csv('/content/drive/MyDrive/Final.csv')

X = dataset[['YearBuilt','PostalCode','Stories','AIRConstructionCode','SqFt','TotalReplacementValue']]

y = dataset['AAL']

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()

regressor.fit(X, y)

pickle.dump(regressor, open('modelAAL.pkl','wb'))